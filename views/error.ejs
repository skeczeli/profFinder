<!DOCTYPE html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Error</title>
    <style>
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      body {
        font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
        background: linear-gradient(135deg, #1e3a8a 0%, #0f172a 100%);
        min-height: 100vh;
        display: flex;
        justify-content: center;
        align-items: center;
        position: relative;
        overflow: hidden;
        padding: 20px;
      }

      /* Elementos decorativos de fondo */
      body::before {
        content: '';
        position: absolute;
        top: -50%;
        left: -50%;
        width: 200%;
        height: 200%;
        background: radial-gradient(circle, rgba(255,255,255,0.1) 1px, transparent 1px);
        background-size: 50px 50px;
        animation: float 20s ease-in-out infinite;
        z-index: 1;
      }

      @keyframes float {
        0%, 100% { transform: translateY(0px) rotate(0deg); }
        50% { transform: translateY(-20px) rotate(180deg); }
      }

      /* Contenedor principal */
      .error-container {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        border-radius: 24px;
        padding: 60px 50px;
        box-shadow: 0 20px 60px rgba(0, 0, 0, 0.15);
        text-align: center;
        position: relative;
        z-index: 10;
        max-width: 600px;
        width: 100%;
        border: 1px solid rgba(255, 255, 255, 0.2);
        animation: slideUp 0.8s ease-out;
      }

      @keyframes slideUp {
        from {
          opacity: 0;
          transform: translateY(30px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      /* Icono de error */
      .error-icon {
        width: 80px;
        height: 80px;
        background: linear-gradient(135deg, #f56565, #e53e3e);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 auto 24px;
        color: white;
        font-size: 2rem;
        font-weight: bold;
        animation: pulse 2s infinite;
      }

      @keyframes pulse {
        0%, 100% { transform: scale(1); }
        50% { transform: scale(1.05); }
      }

      h1 {
        font-size: 2.2rem;
        font-weight: 700;
        color: #dc2626;
        margin-bottom: 16px;
        letter-spacing: -0.5px;
      }

      .error-message {
        font-size: 1.1rem;
        color: #64748b;
        margin-bottom: 24px;
        line-height: 1.6;
      }

      /* Mensaje técnico */
      .technical-message {
        background: rgba(220, 38, 38, 0.1);
        border: 1px solid rgba(220, 38, 38, 0.2);
        border-radius: 12px;
        padding: 20px;
        margin-bottom: 32px;
        text-align: left;
      }

      .technical-message strong {
        color: #dc2626;
        font-weight: 600;
        display: block;
        margin-bottom: 8px;
      }

      .technical-message p {
        color: #991b1b;
        font-family: 'Consolas', 'Monaco', monospace;
        font-size: 0.95rem;
        line-height: 1.4;
        word-break: break-word;
        margin: 0;
      }

      /* Botones de acción */
      .action-buttons {
        display: flex;
        gap: 16px;
        justify-content: center;
        flex-wrap: wrap;
      }

      .btn {
        display: inline-block;
        padding: 14px 24px;
        border-radius: 12px;
        text-decoration: none;
        font-weight: 600;
        font-size: 1rem;
        transition: all 0.3s ease;
        cursor: pointer;
        border: none;
      }

      .btn-primary {
        background: linear-gradient(135deg, #4d8ad5, #667eea);
        color: white;
        box-shadow: 0 4px 15px rgba(77, 138, 213, 0.2);
      }

      .btn-primary:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(77, 138, 213, 0.3);
      }

      .btn-secondary {
        background: linear-gradient(135deg, #6c757d, #868e96);
        color: white;
        box-shadow: 0 4px 15px rgba(108, 117, 125, 0.2);
      }

      .btn-secondary:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(108, 117, 125, 0.3);
      }

      .btn:active {
        transform: translateY(0);
      }

      /* Elementos decorativos adicionales */
      .floating-elements {
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        pointer-events: none;
        z-index: 5;
      }

      .floating-element {
        position: absolute;
        background: rgba(220, 38, 38, 0.1);
        border-radius: 50%;
        animation: floatAround 12s ease-in-out infinite;
      }

      .floating-element:nth-child(1) {
        width: 40px;
        height: 40px;
        top: 15%;
        left: 15%;
        animation-delay: 0s;
      }

      .floating-element:nth-child(2) {
        width: 60px;
        height: 60px;
        top: 70%;
        right: 20%;
        animation-delay: 4s;
      }

      .floating-element:nth-child(3) {
        width: 30px;
        height: 30px;
        bottom: 25%;
        left: 80%;
        animation-delay: 8s;
      }

      @keyframes floatAround {
        0%, 100% { 
          transform: translateY(0px) translateX(0px); 
          opacity: 0.3;
        }
        33% { 
          transform: translateY(-15px) translateX(10px); 
          opacity: 0.6;
        }
        66% { 
          transform: translateY(8px) translateX(-8px); 
          opacity: 0.4;
        }
      }

      /* Responsivo */
      @media (max-width: 768px) {
        .error-container {
          margin: 0 15px;
          padding: 40px 30px;
        }

        h1 {
          font-size: 1.9rem;
        }

        .error-message {
          font-size: 1rem;
        }

        .action-buttons {
          flex-direction: column;
          align-items: center;
        }

        .btn {
          width: 200px;
        }
      }

      @media (max-width: 480px) {
        .error-container {
          padding: 30px 25px;
        }

        h1 {
          font-size: 1.7rem;
        }

        .error-icon {
          width: 60px;
          height: 60px;
          font-size: 1.5rem;
        }

        .technical-message {
          padding: 16px;
        }

        .btn {
          padding: 12px 20px;
          font-size: 0.95rem;
          width: 100%;
        }
      }
    </style>
  </head>
  <body>
    <!-- Elementos flotantes decorativos -->
    <div class="floating-elements">
      <div class="floating-element"></div>
      <div class="floating-element"></div>
      <div class="floating-element"></div>
    </div>

    <div class="error-container">
      <div class="error-icon">!</div>
      <h1>Error Inesperado</h1>
      <p class="error-message">
        Lo sentimos, algo salió mal en el servidor. Nuestro equipo ha sido notificado y está trabajando para resolver el problema.
      </p>
      
      <% if (typeof message !== 'undefined' && message) { %>
      <div class="technical-message">
        <strong>Información técnica:</strong>
        <p><%= message %></p>
      </div>
      <% } %>

      <div class="action-buttons">
        <a href="/" class="btn btn-primary">Volver al Inicio</a>
        <button onclick="window.history.back()" class="btn btn-secondary">Página Anterior</button>
      </div>
    </div>

    <script>
      // Animación adicional al cargar
      document.addEventListener('DOMContentLoaded', function() {
        const container = document.querySelector('.error-container');
        
        // Pequeña animación de rebote después de la carga
        setTimeout(() => {
          container.style.animation = 'slideUp 0.8s ease-out, bounce 0.3s ease-out 0.8s';
        }, 100);
      });

      // Definir animación de rebote
      const style = document.createElement('style');
      style.textContent = `
        @keyframes bounce {
          0%, 100% { transform: translateY(0); }
          50% { transform: translateY(-5px); }
        }
      `;
      document.head.appendChild(style);

      // Auto-reload después de 30 segundos (opcional)
      // setTimeout(() => {
      //   window.location.reload();
      // }, 30000);
    </script>
  </body>
</html>