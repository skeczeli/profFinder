<!DOCTYPE html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Detalles de: <%= profesor.nombre %></title>
    <style>
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      body {
        font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: 100vh;
        position: relative;
        padding: 20px;
      }

      /* Elementos decorativos de fondo */
      body::before {
        content: '';
        position: fixed;
        top: -50%;
        left: -50%;
        width: 200%;
        height: 200%;
        background: radial-gradient(circle, rgba(255,255,255,0.1) 1px, transparent 1px);
        background-size: 50px 50px;
        animation: float 20s ease-in-out infinite;
        z-index: 1;
        pointer-events: none;
      }

      @keyframes float {
        0%, 100% { transform: translateY(0px) rotate(0deg); }
        50% { transform: translateY(-20px) rotate(180deg); }
      }

      /* Popup de éxito */
      .popup {
        position: fixed;
        top: 20px;
        right: 20px;
        background: linear-gradient(135deg, #48bb78, #38a169);
        color: white;
        padding: 16px 24px;
        border-radius: 12px;
        box-shadow: 0 8px 25px rgba(72, 187, 120, 0.3);
        z-index: 1000;
        font-weight: 600;
        animation: slideInRight 0.5s ease-out, slideOutRight 0.5s ease-out 2.5s;
      }

      @keyframes slideInRight {
        from {
          opacity: 0;
          transform: translateX(100%);
        }
        to {
          opacity: 1;
          transform: translateX(0);
        }
      }

      @keyframes slideOutRight {
        from {
          opacity: 1;
          transform: translateX(0);
        }
        to {
          opacity: 0;
          transform: translateX(100%);
        }
      }

      /* Botón de inicio */
      #inicio {
        position: fixed;
        top: 30px;
        left: 30px;
        z-index: 100;
      }

      #inicio a {
        background: rgba(255, 255, 255, 0.2);
        backdrop-filter: blur(10px);
        color: white;
        border: 1px solid rgba(255, 255, 255, 0.3);
        border-radius: 12px;
        padding: 12px 24px;
        font-size: 0.95rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-block;
      }

      #inicio a:hover {
        background: rgba(255, 255, 255, 0.3);
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
      }

      /* Contenedor principal */
      .main-container {
        max-width: 1000px;
        margin: 0 auto;
        position: relative;
        z-index: 10;
        padding-top: 80px;
      }

      /* Título principal */
      h1 {
        font-size: 3rem;
        font-weight: 700;
        color: white;
        text-align: center;
        margin-bottom: 50px;
        text-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
        letter-spacing: -1px;
        animation: slideDown 0.8s ease-out;
      }

      @keyframes slideDown {
        from {
          opacity: 0;
          transform: translateY(-30px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      /* Contenedor de detalles */
      .profesor-detalle {
        display: flex;
        flex-direction: column;
        gap: 30px;
        align-items: center;
      }

      /* Secciones de información */
      .info-section {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        border-radius: 20px;
        box-shadow: 0 20px 60px rgba(0, 0, 0, 0.15);
        padding: 35px;
        width: 100%;
        max-width: 800px;
        border: 1px solid rgba(255, 255, 255, 0.2);
        animation: slideUp 0.8s ease-out;
        transition: all 0.3s ease;
      }

      .info-section:hover {
        transform: translateY(-5px);
        box-shadow: 0 25px 70px rgba(0, 0, 0, 0.2);
      }

      @keyframes slideUp {
        from {
          opacity: 0;
          transform: translateY(30px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      h2 {
        color: #1a3b5d;
        font-weight: 700;
        margin-bottom: 24px;
        font-size: 1.8rem;
        letter-spacing: -0.5px;
        border-bottom: 3px solid #4d8ad5;
        padding-bottom: 8px;
      }

      p {
        color: #4a5568;
        line-height: 1.6;
        margin-bottom: 16px;
        font-size: 1.1rem;
      }

      strong {
        color: #1a3b5d;
        font-weight: 600;
      }

      /* Estados de ubicación */
      .status-entry {
        background: linear-gradient(135deg, #c6f6d5, #9ae6b4);
        color: #22543d;
        padding: 6px 12px;
        border-radius: 20px;
        font-weight: 600;
        font-size: 0.9rem;
      }

      .status-exit {
        background: linear-gradient(135deg, #fed7d7, #feb2b2);
        color: #742a2a;
        padding: 6px 12px;
        border-radius: 20px;
        font-weight: 600;
        font-size: 0.9rem;
      }

      /* Lista de materias */
      .materias-lista {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 16px;
        margin-top: 16px;
      }

      .materia-card {
        background: linear-gradient(135deg, #f8fafc, #e2e8f0);
        border-radius: 12px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
        padding: 16px 20px;
        transition: all 0.3s ease;
        border: 2px solid transparent;
      }

      .materia-card:hover {
        background: white;
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        transform: translateY(-2px);
        border-color: rgba(77, 138, 213, 0.2);
      }

      .materia-card a {
        color: #4d8ad5;
        font-weight: 600;
        text-decoration: none;
        font-size: 1.1rem;
        transition: all 0.2s ease;
      }

      .materia-card a:hover {
        color: #3a75c4;
        text-shadow: 0 2px 4px rgba(77, 138, 213, 0.2);
      }

      /* Contenedor de contacto */
      .contact-container {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        border-radius: 20px;
        box-shadow: 0 20px 60px rgba(0, 0, 0, 0.15);
        padding: 40px 35px;
        width: 100%;
        max-width: 600px;
        border: 1px solid rgba(255, 255, 255, 0.2);
        transition: all 0.3s ease;
        animation: slideUp 0.8s ease-out 0.4s both;
      }

      .contact-container:hover {
        transform: translateY(-5px);
        box-shadow: 0 25px 70px rgba(0, 0, 0, 0.2);
      }

      /* Formulario de contacto */
      .input-group {
        margin-bottom: 24px;
      }

      label {
        display: block;
        font-size: 0.95rem;
        color: #4a5568;
        margin-bottom: 8px;
        font-weight: 600;
      }

      input[type="text"] {
        width: 100%;
        padding: 16px 20px;
        border: 2px solid #e2e8f0;
        border-radius: 12px;
        font-size: 1rem;
        background: #f8fafc;
        transition: all 0.3s ease;
        outline: none;
      }

      input[type="text"]:focus {
        border-color: #4d8ad5;
        box-shadow: 0 0 0 4px rgba(77, 138, 213, 0.1);
        background: white;
        transform: translateY(-2px);
      }

      .char-count {
        display: block;
        margin-top: 8px;
        font-size: 0.85rem;
        color: #64748b;
        text-align: right;
        font-style: italic;
      }

      button[type="submit"] {
        background: linear-gradient(135deg, #4d8ad5, #667eea);
        color: white;
        border: none;
        border-radius: 12px;
        padding: 16px 24px;
        font-size: 1.1rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        width: 100%;
        margin-top: 12px;
      }

      button[type="submit"]:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(77, 138, 213, 0.3);
      }

      button[type="submit"]:active {
        transform: translateY(0);
      }

      /* Mensaje de no disponible */
      .disabled-form {
        background: rgba(108, 117, 125, 0.15);
        border: 2px solid rgba(108, 117, 125, 0.3);
        border-radius: 12px;
        padding: 24px;
        text-align: center;
        color: #495057;
        font-weight: 600;
        font-size: 1.1rem;
        max-width: 600px;
        margin: 0 auto;
        box-shadow: 0 4px 12px rgba(108, 117, 125, 0.1);
      }

      /* Responsivo */
      @media (max-width: 768px) {
        .main-container {
          padding-top: 60px;
          margin: 0 15px;
        }

        h1 {
          font-size: 2.5rem;
          margin-bottom: 40px;
        }

        .info-section,
        .contact-container {
          padding: 25px 20px;
        }

        #inicio {
          top: 20px;
          left: 20px;
        }

        #inicio a {
          padding: 10px 18px;
          font-size: 0.9rem;
        }

        .materias-lista {
          grid-template-columns: 1fr;
        }
      }

      @media (max-width: 480px) {
        h1 {
          font-size: 2rem;
        }

        h2 {
          font-size: 1.5rem;
        }

        .info-section,
        .contact-container {
          padding: 20px 15px;
        }

        p {
          font-size: 1rem;
        }
      }

      /* Indicador de carga para MQTT */
      .loading-indicator {
        position: fixed;
        bottom: 20px;
        right: 20px;
        background: rgba(77, 138, 213, 0.9);
        color: white;
        padding: 8px 12px;
        border-radius: 20px;
        font-size: 0.8rem;
        font-weight: 600;
        z-index: 1000;
        display: none;
        animation: slideInUp 0.3s ease-out;
      }

      @keyframes slideInUp {
        from {
          opacity: 0;
          transform: translateY(20px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }
    </style>
  </head>
  <body>
    <% if (enviado) { %>
      <div id="popup" class="popup">Mensaje enviado con éxito</div>
    <% } %>

    <div class="loading-indicator" id="loadingIndicator">
      Actualizando estados...
    </div>

    <header>
      <div id="inicio"><a href="/">Inicio</a></div>
    </header>

    <div class="main-container">
      <h1><%= profesor.nombre %></h1>

      <div class="profesor-detalle">
        <div class="info-section">
          <h2>Información del Profesor</h2>
          <p><strong>Email:</strong> <%= profesor.email || 'No disponible' %></p>

          <% if (profesor.lastLocation) { %>
            <p>
              <strong>Última ubicación registrada:</strong>
              <% if (profesor.lastLocation.isentry) { %>
                <span class="status-entry">Aula "<%= profesor.lastLocation.aula_nombre %>"</span>
              <% } else { %>
                <span class="status-exit">Profesor no disponible</span>
              <% } %>
              desde <%= new Date(profesor.lastLocation.timestamp).toLocaleString('es-AR') %>
            </p>
          <% } else { %>
            <p><strong>Última ubicación registrada:</strong> No hay registros de aula.</p>
          <% } %>
        </div>

        <div class="info-section">
          <h2>Materias Dictadas</h2>
          <% if (profesor.materias && profesor.materias.length > 0) { %>
            <div class="materias-lista">
              <% profesor.materias.forEach((materia) => { %>
                <div class="materia-card">
                  <a href="/materia/<%= materia.materia_id %>"><%= materia.nombre %></a>
                </div>
              <% }); %>
            </div>
          <% } else { %>
            <p><%= profesor.nombre %> no tiene materias asignadas en el sistema.</p>
          <% } %>
        </div>

        <% if (profesor.lastLocation && profesor.lastLocation.isentry && profesor.lastLocation.esp32_id) { %>
          <div class="contact-container">
            <h2>Contactar a <%= profesor.nombre %></h2>
            <form action="/profesor/<%= profesor.profesor_id %>/preguntar" method="POST">
              <input type="hidden" name="esp32Id" value="<%= profesor.lastLocation.esp32_id %>" />
              <div class="input-group">
                <label for="alumno">Tu Nombre</label>
                <input
                  id="alumno"
                  name="alumno"
                  type="text"
                  maxlength="13"
                  placeholder="Ingresa tu nombre"
                  required
                />
                <span id="char-count" class="char-count">
                  Caracteres restantes: <span id="char-count-value">13</span>
                </span>
              </div>
              <button type="submit">Registrar Consulta</button>
            </form>
          </div>
        <% } else { %>
          <p class="disabled-form">
            El profesor no está disponible para recibir mensajes en este momento.
          </p>
        <% } %>
      </div>
    </div>

    <script>
      const input = document.getElementById("alumno");
      const charCountValue = document.getElementById("char-count-value");
      const loadingIndicator = document.getElementById("loadingIndicator");

      // Contador de caracteres
      if (input && charCountValue) {
        const maxLength = input.getAttribute("maxlength");
        charCountValue.textContent = maxLength;
        input.addEventListener("input", function () {
          const currentLength = this.value.length;
          charCountValue.textContent = maxLength - currentLength;
        });

        // Animación de focus
        input.addEventListener('focus', function() {
          this.parentElement.style.transform = 'scale(1.02)';
        });

        input.addEventListener('blur', function() {
          this.parentElement.style.transform = 'scale(1)';
        });
      }

      // Auto-remover popup
      setTimeout(() => {
        const popup = document.getElementById("popup");
        if (popup) popup.remove();
      }, 3000);

      // Función para mostrar indicador de carga
      function showLoadingIndicator() {
        if (loadingIndicator) {
          loadingIndicator.style.display = 'block';
          setTimeout(() => {
            loadingIndicator.style.display = 'none';
          }, 2000);
        }
      }

      // Animaciones de entrada
      document.addEventListener('DOMContentLoaded', function() {
        const sections = document.querySelectorAll('.info-section, .contact-container, .disabled-form');
        sections.forEach((section, index) => {
          section.style.animationDelay = `${0.2 * index}s`;
        });
      });
    </script>

    <!-- MQTT.js desde CDN -->
    <script src="https://unpkg.com/mqtt/dist/mqtt.min.js"></script>
    <script>
      const client = mqtt.connect('ws://54.80.230.215:9001');
      
      client.on('connect', () => {
        console.log('Conectado a MQTT desde frontend');
        client.subscribe('profesores/estado');
      });

      client.on('message', (topic, message) => {
        try {
          const data = JSON.parse(message.toString());
          console.log('Estado cambiado:', data);
          
          // Mostrar indicador y recargar después de un breve delay
          showLoadingIndicator();
          setTimeout(() => {
            location.reload();
          }, 1000);
          
        } catch (error) {
          console.error('Error procesando mensaje MQTT:', error);
        }
      });

      client.on('error', (error) => {
        console.error('Error de conexión MQTT:', error);
      });
    </script>
  </body>
</html>